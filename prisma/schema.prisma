// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @db.VarChar(100)
  nama_lengkap   String   @db.VarChar(100)
  email          String   @unique @db.VarChar(320)
  password       String   @db.VarChar(100)
  token          String?  @db.VarChar(100)
  verified_email Boolean? @db.TinyInt()
  latitude       String?  @db.VarChar(100)
  longitude      String?  @db.VarChar(100)

  Review    Review[]
  Cart      Cart[]
  Order     Order[]
  Langganan Langganan[]

  @@map("users")
}

model otp {
  id         String   @id @db.VarChar(100)
  email      String   @unique @db.VarChar(320)
  otp        String   @db.VarChar(100)
  created_at DateTime @default(now()) @db.DateTime()

  @@map("otps")
}

model Pedagang {
  id                String   @id @db.VarChar(100)
  email             String   @unique @db.VarChar(320)
  password          String   @db.VarChar(100)
  verified_email    Boolean? @db.TinyInt()
  token             String?  @db.VarChar(100)
  nama_warung       String   @db.VarChar(100)
  nama_pedagang     String   @db.VarChar(100)
  image             String?  @db.VarChar(2000)
  buka              Boolean? @db.TinyInt()
  jam_buka          String?  @db.VarChar(100)
  jam_tutup         String?  @db.VarChar(100)
  daerah_dagang     String?  @db.VarChar(100)
  rating            Float?   @db.Double()
  sertifikasi_halal Boolean? @db.TinyInt()
  latitude          String?  @db.VarChar(100)
  longitude         String?  @db.VarChar(100)

  Jajanan                   Jajanan[]
  Image_Verifikasi_Pedagang Image_Verifikasi_Pedagang[]
  Review                    Review[]
  Cart                      Cart[]
  Order                     Order[]
  Langganan                 Langganan[]
  Iklan                     Iklan[]

  @@map("pedagangs")
}

model Jajanan {
  id          String  @id @db.VarChar(100)
  pedagang_id String  @db.VarChar(100)
  nama        String  @db.VarChar(100)
  harga       Int     @db.Int()
  image       String  @db.VarChar(2000)
  tersedia    Boolean @db.TinyInt()
  kategori    String  @db.VarChar(100)

  pedagang Pedagang @relation(fields: [pedagang_id], references: [id])

  @@map("jajanans")
}

model Image_Verifikasi_Pedagang {
  id          String @id @db.VarChar(100)
  pedagang_id String @db.VarChar(100)
  url         String @db.VarChar(2000)

  pedagang Pedagang @relation(fields: [pedagang_id], references: [id])

  @@map("image_verifikasi_pedagangs")
}

model Review {
  id          String   @id @db.VarChar(100)
  user_id     String   @db.VarChar(100)
  pedagang_id String   @db.VarChar(100)
  rating      Float    @db.Double()
  review      String   @db.VarChar(1000)
  created_at  DateTime @db.DateTime()

  user     User     @relation(fields: [user_id], references: [id])
  pedagang Pedagang @relation(fields: [pedagang_id], references: [id])

  @@map("reviews")
}

model Cart {
  id          String @id @db.VarChar(100)
  user_id     String @db.VarChar(100)
  pedagang_id String @db.VarChar(100)

  user         User           @relation(fields: [user_id], references: [id])
  pedagang     Pedagang       @relation(fields: [pedagang_id], references: [id])
  Cart_Item Cart_Item[]

  @@map("carts")
}

model Cart_Item {
  id         String @id @db.VarChar(100)
  cart_id    String @db.VarChar(100)
  jajanan_id String @db.VarChar(100)
  jumlah     Int    @db.Int()
  total      Int    @db.Int()

  cart Cart @relation(fields: [cart_id], references: [id])

  @@map("Cart_Items")
}

model Order {
  id                String   @id @db.VarChar(100)
  user_id           String   @db.VarChar(100)
  pedagang_id       String   @db.VarChar(100)
  metode_pembayaran String   @db.VarChar(100)
  status            String   @db.VarChar(100)
  created_at        DateTime @db.DateTime()

  user          User            @relation(fields: [user_id], references: [id])
  pedagang      Pedagang        @relation(fields: [pedagang_id], references: [id])
  Order_Item Order_Item[]

  @@map("orders")
}

model Order_Item {
  id         String @id @db.VarChar(100)
  order_id   String @db.VarChar(100)
  jajanan_id String @db.VarChar(100)
  jumlah     Int    @db.Int()
  total      Int    @db.Int()

  order Order @relation(fields: [order_id], references: [id])

  @@map("Order_Items")
}

model Langganan {
  id          String @id @db.VarChar(100)
  user_id     String @db.VarChar(100)
  pedagang_id String @db.VarChar(100)

  user     User     @relation(fields: [user_id], references: [id])
  pedagang Pedagang @relation(fields: [pedagang_id], references: [id])

  @@map("langganans")
}

model Iklan {
  id            String   @id @db.VarChar(100)
  pedagang_id   String   @db.VarChar(100)
  nominal_bayar Int      @db.Int()
  expired_at    DateTime @db.DateTime()

  pedagang Pedagang @relation(fields: [pedagang_id], references: [id])

  @@map("iklans")
}

model Zona_Terlarang {
  id        String @id @db.VarChar(100)
  latitude  String @db.VarChar(100)
  longitude String @db.VarChar(100)
  radius    Int    @db.Int()

  @@map("zona_terlarangs")
}
